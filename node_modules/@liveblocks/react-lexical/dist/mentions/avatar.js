'use strict';

var react = require('@liveblocks/react');
var React = require('react');
var classnames = require('../classnames.js');

const Avatar = React.forwardRef(
  function Avatar2(props, forwardedRef) {
    const { userId, className, ...spanProps } = props;
    const { user, isLoading } = react.useUser(userId);
    const avatar = user ? user.avatar : void 0;
    const name = user ? user.name : void 0;
    function Initials() {
      const initials = name ? getInitials(name) : void 0;
      if (initials) {
        return /* @__PURE__ */ React.createElement("span", {
          "aria-hidden": true,
          className: "lb-avatar-fallback"
        }, initials);
      }
      if (isLoading)
        return null;
      if (user === void 0)
        return null;
      return /* @__PURE__ */ React.createElement("span", {
        "aria-label": userId,
        title: userId,
        className: "lb-avatar-fallback"
      }, getInitials(userId));
    }
    return /* @__PURE__ */ React.createElement("span", {
      "data-loading": isLoading ? "" : void 0,
      ...spanProps,
      className: classnames.classNames("lb-avatar", className),
      ref: forwardedRef
    }, avatar && /* @__PURE__ */ React.createElement("img", {
      src: avatar,
      alt: name,
      className: "lb-avatar-image"
    }), /* @__PURE__ */ React.createElement(Initials, null));
  }
);
function getInitials(name) {
  return name.trim().split(" ").reduce((initials, name2, index, array) => {
    if (index === 0 || index === array.length - 1) {
      initials += name2.charAt(0).toLocaleUpperCase();
    }
    return initials;
  }, "");
}

exports.Avatar = Avatar;
//# sourceMappingURL=avatar.js.map
