'use strict';

var React = require('react');
var clamp = require('./clamp.js');
var wrap = require('./wrap.js');

const defaultOptions = {
  wrap: true
};
function useIndex(initial, length, options) {
  const { wrap: shouldWrap } = React.useMemo(() => {
    return {
      ...defaultOptions,
      ...options
    };
  }, [options]);
  const transform = React.useMemo(() => shouldWrap ? wrap.wrap : clamp.clamp, [shouldWrap]);
  const [index, setIndex] = React.useState(initial);
  React.useEffect(() => {
    setIndex((index2) => clamp.clamp(index2, 0, Math.max(length - 1, 0)));
  }, [length]);
  const previousIndex = React.useCallback(() => {
    setIndex((index2) => transform(index2 - 1, 0, Math.max(length, 0)));
  }, [length, transform]);
  const nextIndex = React.useCallback(() => {
    setIndex((index2) => transform(index2 + 1, 0, Math.max(length, 0)));
  }, [length, transform]);
  return [index, previousIndex, nextIndex, setIndex];
}

exports.useIndex = useIndex;
//# sourceMappingURL=use-index.js.map
