import { Range, Editor } from 'slate';

const defaultOptions = {
  direction: "before"
};
function getMatchRange(editor, at, terminators = [" "], options = defaultOptions) {
  const { include, direction } = { ...defaultOptions, ...options };
  let [start, end] = Range.edges(at);
  let point = start;
  function move(direction2) {
    const next = direction2 === "after" ? Editor.after(editor, point, {
      unit: "character"
    }) : Editor.before(editor, point, { unit: "character" });
    const nextWord = next && Editor.string(
      editor,
      direction2 === "after" ? { anchor: point, focus: next } : { anchor: next, focus: point }
    );
    const lastWord = nextWord && nextWord[direction2 === "after" ? 0 : nextWord.length - 1];
    if (next && lastWord && !terminators.includes(lastWord)) {
      point = next;
      if (point.offset === 0) {
        return false;
      }
    } else {
      return false;
    }
    return true;
  }
  if (direction !== "before") {
    point = end;
    while (move("after"))
      ;
    end = point;
  }
  if (direction !== "after") {
    point = start;
    while (move("before"))
      ;
    start = point;
  }
  if (include) {
    return {
      anchor: Editor.before(editor, start, { unit: "offset" }) ?? start,
      focus: Editor.after(editor, end, { unit: "offset" }) ?? end
    };
  }
  return { anchor: start, focus: end };
}

export { getMatchRange };
//# sourceMappingURL=get-match-range.mjs.map
