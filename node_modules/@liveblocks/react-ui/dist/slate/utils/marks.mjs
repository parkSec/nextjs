import { Editor } from 'slate';
import { getCharacterBefore, getCharacterAfter } from './get-character.mjs';
import { isSelectionCollapsed } from './is-selection-collapsed.mjs';

function isMarkActive(editor, format) {
  const marks = Editor.marks(editor);
  return marks ? marks[format] === true : false;
}
function toggleMark(editor, format) {
  const isActive = isMarkActive(editor, format);
  if (isActive) {
    Editor.removeMark(editor, format);
  } else {
    Editor.addMark(editor, format, true);
  }
}
function removeMarks(editor) {
  const marks = Editor.marks(editor);
  if (marks) {
    for (const mark in marks) {
      Editor.removeMark(editor, mark);
    }
  }
}
function leaveMarkEdge(editor, edge) {
  if (isSelectionCollapsed(editor.selection)) {
    const marks = Object.keys(Editor.marks(editor) ?? {});
    if (marks.length > 0) {
      const sibling = edge === "start" ? getCharacterBefore(editor, editor.selection) : getCharacterAfter(editor, editor.selection);
      if (!sibling) {
        removeMarks(editor);
      }
    }
  }
}

export { isMarkActive, leaveMarkEdge, removeMarks, toggleMark };
//# sourceMappingURL=marks.mjs.map
