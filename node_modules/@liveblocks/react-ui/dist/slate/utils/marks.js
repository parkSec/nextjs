'use strict';

var slate = require('slate');
var getCharacter = require('./get-character.js');
var isSelectionCollapsed = require('./is-selection-collapsed.js');

function isMarkActive(editor, format) {
  const marks = slate.Editor.marks(editor);
  return marks ? marks[format] === true : false;
}
function toggleMark(editor, format) {
  const isActive = isMarkActive(editor, format);
  if (isActive) {
    slate.Editor.removeMark(editor, format);
  } else {
    slate.Editor.addMark(editor, format, true);
  }
}
function removeMarks(editor) {
  const marks = slate.Editor.marks(editor);
  if (marks) {
    for (const mark in marks) {
      slate.Editor.removeMark(editor, mark);
    }
  }
}
function leaveMarkEdge(editor, edge) {
  if (isSelectionCollapsed.isSelectionCollapsed(editor.selection)) {
    const marks = Object.keys(slate.Editor.marks(editor) ?? {});
    if (marks.length > 0) {
      const sibling = edge === "start" ? getCharacter.getCharacterBefore(editor, editor.selection) : getCharacter.getCharacterAfter(editor, editor.selection);
      if (!sibling) {
        removeMarks(editor);
      }
    }
  }
}

exports.isMarkActive = isMarkActive;
exports.leaveMarkEdge = leaveMarkEdge;
exports.removeMarks = removeMarks;
exports.toggleMark = toggleMark;
//# sourceMappingURL=marks.js.map
