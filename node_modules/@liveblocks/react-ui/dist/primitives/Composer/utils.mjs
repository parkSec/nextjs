import { isComposerBodyAutoLink } from '../../slate/plugins/auto-links.mjs';
import { isComposerBodyCustomLink } from '../../slate/plugins/custom-links.mjs';
import { isComposerBodyMention } from '../../slate/plugins/mentions.mjs';
import { isText } from '../../slate/utils/is-text.mjs';
import { exists } from '../../utils/exists.mjs';
import { isCommentBodyMention, isCommentBodyLink, isCommentBodyText } from '../Comment/utils.mjs';

function composerBodyMentionToCommentBodyMention(mention) {
  return {
    type: "mention",
    id: mention.id
  };
}
function composerBodyAutoLinkToCommentBodyLink(link) {
  return {
    type: "link",
    url: link.url
  };
}
function composerBodyCustomLinkToCommentBodyLink(link) {
  return {
    type: "link",
    url: link.url,
    text: link.children.map((child) => child.text).join("")
  };
}
function commentBodyMentionToComposerBodyMention(mention) {
  return {
    type: "mention",
    id: mention.id,
    children: [{ text: "" }]
  };
}
function commentBodyLinkToComposerBodyLink(link) {
  if (link.text) {
    return {
      type: "custom-link",
      url: link.url,
      children: [{ text: link.text }]
    };
  } else {
    return {
      type: "auto-link",
      url: link.url,
      children: [{ text: link.url }]
    };
  }
}
function composerBodyToCommentBody(body) {
  return {
    version: 1,
    content: body.map((block) => {
      if (block.type !== "paragraph") {
        return null;
      }
      const children = block.children.map((inline) => {
        if (isComposerBodyMention(inline)) {
          return composerBodyMentionToCommentBodyMention(inline);
        }
        if (isComposerBodyAutoLink(inline)) {
          return composerBodyAutoLinkToCommentBodyLink(inline);
        }
        if (isComposerBodyCustomLink(inline)) {
          return composerBodyCustomLinkToCommentBodyLink(inline);
        }
        if (isText(inline)) {
          return inline;
        }
        return null;
      }).filter(exists);
      return {
        ...block,
        children
      };
    }).filter(exists)
  };
}
const emptyComposerBody = [];
function commentBodyToComposerBody(body) {
  if (!body || !body?.content) {
    return emptyComposerBody;
  }
  return body.content.map((block) => {
    if (block.type !== "paragraph") {
      return null;
    }
    const children = block.children.map((inline) => {
      if (isCommentBodyMention(inline)) {
        return commentBodyMentionToComposerBodyMention(inline);
      }
      if (isCommentBodyLink(inline)) {
        return commentBodyLinkToComposerBodyLink(inline);
      }
      if (isCommentBodyText(inline)) {
        return inline;
      }
      return null;
    }).filter(exists);
    return {
      ...block,
      children
    };
  }).filter(exists);
}
function getPlacementFromPosition(position, direction = "ltr") {
  return `${position}-${direction === "rtl" ? "end" : "start"}`;
}
function getSideAndAlignFromPlacement(placement) {
  const [side, align = "center"] = placement.split("-");
  return [side, align];
}

export { commentBodyLinkToComposerBodyLink, commentBodyMentionToComposerBodyMention, commentBodyToComposerBody, composerBodyAutoLinkToCommentBodyLink, composerBodyCustomLinkToCommentBodyLink, composerBodyMentionToCommentBodyMention, composerBodyToCommentBody, getPlacementFromPosition, getSideAndAlignFromPlacement };
//# sourceMappingURL=utils.mjs.map
