{"version":3,"file":"utils.js","sources":["../../../src/primitives/Composer/utils.ts"],"sourcesContent":["import type { Placement } from \"@floating-ui/react-dom\";\nimport type {\n  CommentBody,\n  CommentBodyLink,\n  CommentBodyMention,\n} from \"@liveblocks/core\";\n\nimport { isComposerBodyAutoLink } from \"../../slate/plugins/auto-links\";\nimport { isComposerBodyCustomLink } from \"../../slate/plugins/custom-links\";\nimport { isComposerBodyMention } from \"../../slate/plugins/mentions\";\nimport { isText } from \"../../slate/utils/is-text\";\nimport type {\n  ComposerBody,\n  ComposerBodyAutoLink,\n  ComposerBodyCustomLink,\n  ComposerBodyMention,\n  ComposerBodyText,\n  Direction,\n} from \"../../types\";\nimport { exists } from \"../../utils/exists\";\nimport {\n  isCommentBodyLink,\n  isCommentBodyMention,\n  isCommentBodyText,\n} from \"../Comment/utils\";\nimport type { SuggestionsPosition } from \"./types\";\n\nexport function composerBodyMentionToCommentBodyMention(\n  mention: ComposerBodyMention\n): CommentBodyMention {\n  return {\n    type: \"mention\",\n    id: mention.id,\n  };\n}\n\nexport function composerBodyAutoLinkToCommentBodyLink(\n  link: ComposerBodyAutoLink\n): CommentBodyLink {\n  return {\n    type: \"link\",\n    url: link.url,\n  };\n}\n\nexport function composerBodyCustomLinkToCommentBodyLink(\n  link: ComposerBodyCustomLink\n): CommentBodyLink {\n  return {\n    type: \"link\",\n    url: link.url,\n    text: link.children.map((child) => child.text).join(\"\"),\n  };\n}\n\nexport function commentBodyMentionToComposerBodyMention(\n  mention: CommentBodyMention\n): ComposerBodyMention {\n  return {\n    type: \"mention\",\n    id: mention.id,\n    children: [{ text: \"\" }],\n  };\n}\n\nexport function commentBodyLinkToComposerBodyLink(\n  link: CommentBodyLink\n): ComposerBodyAutoLink | ComposerBodyCustomLink {\n  if (link.text) {\n    return {\n      type: \"custom-link\",\n      url: link.url,\n      children: [{ text: link.text }],\n    };\n  } else {\n    return {\n      type: \"auto-link\",\n      url: link.url,\n      children: [{ text: link.url }],\n    };\n  }\n}\n\nexport function composerBodyToCommentBody(body: ComposerBody): CommentBody {\n  return {\n    version: 1,\n    content: body\n      .map((block) => {\n        // All root blocks are paragraphs at the moment\n        if (block.type !== \"paragraph\") {\n          return null;\n        }\n\n        const children = block.children\n          .map((inline) => {\n            if (isComposerBodyMention(inline)) {\n              return composerBodyMentionToCommentBodyMention(inline);\n            }\n\n            if (isComposerBodyAutoLink(inline)) {\n              return composerBodyAutoLinkToCommentBodyLink(inline);\n            }\n\n            if (isComposerBodyCustomLink(inline)) {\n              return composerBodyCustomLinkToCommentBodyLink(inline);\n            }\n\n            if (isText(inline)) {\n              return inline;\n            }\n\n            return null;\n          })\n          .filter(exists);\n\n        return {\n          ...block,\n          children,\n        };\n      })\n      .filter(exists),\n  };\n}\n\nconst emptyComposerBody: ComposerBody = [];\n\nexport function commentBodyToComposerBody(body: CommentBody): ComposerBody {\n  if (!body || !body?.content) {\n    return emptyComposerBody;\n  }\n\n  return body.content\n    .map((block) => {\n      // All root blocks are paragraphs at the moment\n      if (block.type !== \"paragraph\") {\n        return null;\n      }\n\n      const children = block.children\n        .map((inline) => {\n          if (isCommentBodyMention(inline)) {\n            return commentBodyMentionToComposerBodyMention(inline);\n          }\n\n          if (isCommentBodyLink(inline)) {\n            return commentBodyLinkToComposerBodyLink(inline);\n          }\n\n          if (isCommentBodyText(inline)) {\n            return inline as ComposerBodyText;\n          }\n\n          return null;\n        })\n        .filter(exists);\n\n      return {\n        ...block,\n        children,\n      };\n    })\n    .filter(exists);\n}\n\nexport function getPlacementFromPosition(\n  position: SuggestionsPosition,\n  direction: Direction = \"ltr\"\n): Placement {\n  return `${position}-${direction === \"rtl\" ? \"end\" : \"start\"}`;\n}\n\nexport function getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n\n  return [side, align] as const;\n}\n"],"names":["isComposerBodyMention","isComposerBodyAutoLink","isComposerBodyCustomLink","isText","exists","isCommentBodyMention","isCommentBodyLink","isCommentBodyText"],"mappings":"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"}