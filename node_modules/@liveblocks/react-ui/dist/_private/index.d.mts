import React, { ComponentProps, ElementType, ComponentPropsWithoutRef, ReactNode } from 'react';

interface ButtonProps extends ComponentProps<"button"> {
    variant?: "default" | "outline" | "primary";
    size?: "default" | "large";
    disableable?: boolean;
}
declare const Button: React.ForwardRefExoticComponent<Omit<ButtonProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;

declare type SlotProp = {
    /**
     * Replace the rendered element by the one passed as a child.
     */
    asChild?: boolean;
};
declare type ComponentPropsWithSlot<TElement extends ElementType<any>> = ComponentPropsWithoutRef<TElement> & SlotProp;

interface ListProps extends ComponentPropsWithSlot<"span"> {
    values: ReactNode[];
    formatRemaining?: (amount: number) => string;
    truncate?: number;
    locale?: string;
}
declare const List: React.ForwardRefExoticComponent<ListProps & React.RefAttributes<HTMLSpanElement>>;

interface UserProps extends ComponentProps<"span"> {
    /**
     * The user ID to display the user name for.
     */
    userId: string;
    /**
     * Whether to replace the user name with "you" ($.USER_SELF) for the current user.
     */
    replaceSelf?: boolean;
}
declare function User({ userId, replaceSelf, className, ...props }: UserProps): React.JSX.Element;

declare function ArrowDownIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function ArrowUpIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function CheckIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function CrossIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function DeleteIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function EditIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function EllipsisIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function EmojiIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function EmojiAddIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function MentionIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function MissingIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function ResolveIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function ResolvedIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function RestoreIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function SearchIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function SendIcon(props: ComponentProps<"svg">): React.JSX.Element;

declare function SpinnerIcon(props: ComponentProps<"svg">): React.JSX.Element;

export { ArrowDownIcon, ArrowUpIcon, Button, CheckIcon, CrossIcon, DeleteIcon, EditIcon, EllipsisIcon, EmojiAddIcon, EmojiIcon, List, MentionIcon, MissingIcon, ResolveIcon, ResolvedIcon, RestoreIcon, SearchIcon, SendIcon, SpinnerIcon, User };
