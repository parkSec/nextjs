'use client';
'use strict';

var React = require('react');
var overrides = require('../overrides.js');
require('../primitives/Comment/index.js');
require('../primitives/Composer/index.js');
require('../primitives/Composer/contexts.js');
require('../primitives/EmojiPicker/index.js');
var Timestamp = require('../primitives/Timestamp.js');
var classNames = require('../utils/class-names.js');
var List = require('./internal/List.js');
var User = require('./internal/User.js');

const AUTHORS_TRUNCATE = 3;
const HistoryVersionSummary = React.forwardRef(({ version, selected, className, ...props }, forwardedRef) => {
  const $ = overrides.useOverrides();
  return /* @__PURE__ */ React.createElement("button", {
    ...props,
    className: classNames.classNames("lb-root lb-history-version-summary", className),
    ref: forwardedRef,
    "data-selected": selected ? "" : void 0
  }, /* @__PURE__ */ React.createElement(Timestamp.Timestamp, {
    locale: $.locale,
    date: version.createdAt,
    className: "lb-date lb-history-version-summary-date"
  }), /* @__PURE__ */ React.createElement("span", {
    className: "lb-history-version-summary-authors"
  }, /* @__PURE__ */ React.createElement(List.List, {
    values: version.authors.map((author) => /* @__PURE__ */ React.createElement(User.User, {
      key: author.id,
      userId: author.id,
      replaceSelf: true
    })),
    formatRemaining: $.LIST_REMAINING_USERS,
    truncate: AUTHORS_TRUNCATE,
    locale: $.locale
  })));
});

exports.HistoryVersionSummary = HistoryVersionSummary;
//# sourceMappingURL=HistoryVersionSummary.js.map
