'use client';
import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';
export { DropdownMenuTrigger as DropdownTrigger } from '@radix-ui/react-dropdown-menu';
import React__default, { forwardRef } from 'react';
import { useLiveblocksUIConfig } from '../../config.mjs';
import { FLOATING_ELEMENT_SIDE_OFFSET, FLOATING_ELEMENT_COLLISION_PADDING } from '../../constants.mjs';
import { useOverrides } from '../../overrides.mjs';
import { classNames } from '../../utils/class-names.mjs';

function Dropdown({
  children,
  content,
  defaultOpen,
  open,
  onOpenChange,
  className,
  ...props
}) {
  const $ = useOverrides();
  const { portalContainer } = useLiveblocksUIConfig();
  return /* @__PURE__ */ React__default.createElement(DropdownMenuPrimitive.Root, {
    defaultOpen,
    open,
    onOpenChange,
    dir: $.dir
  }, children, /* @__PURE__ */ React__default.createElement(DropdownMenuPrimitive.Portal, {
    container: portalContainer
  }, /* @__PURE__ */ React__default.createElement(DropdownMenuPrimitive.Content, {
    className: classNames(
      "lb-root lb-portal lb-elevation lb-dropdown",
      className
    ),
    sideOffset: FLOATING_ELEMENT_SIDE_OFFSET,
    collisionPadding: FLOATING_ELEMENT_COLLISION_PADDING,
    ...props
  }, content)));
}
const DropdownItem = forwardRef(({ children, className, ...props }, forwardedRef) => {
  return /* @__PURE__ */ React__default.createElement(DropdownMenuPrimitive.DropdownMenuItem, {
    className: classNames("lb-dropdown-item", className),
    ...props,
    ref: forwardedRef
  }, children);
});

export { Dropdown, DropdownItem };
//# sourceMappingURL=Dropdown.mjs.map
