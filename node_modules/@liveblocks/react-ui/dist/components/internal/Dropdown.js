'use client';
'use strict';

var DropdownMenuPrimitive = require('@radix-ui/react-dropdown-menu');
var React = require('react');
var config = require('../../config.js');
var constants = require('../../constants.js');
var overrides = require('../../overrides.js');
var classNames = require('../../utils/class-names.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var DropdownMenuPrimitive__namespace = /*#__PURE__*/_interopNamespaceDefault(DropdownMenuPrimitive);

function Dropdown({
  children,
  content,
  defaultOpen,
  open,
  onOpenChange,
  className,
  ...props
}) {
  const $ = overrides.useOverrides();
  const { portalContainer } = config.useLiveblocksUIConfig();
  return /* @__PURE__ */ React.createElement(DropdownMenuPrimitive__namespace.Root, {
    defaultOpen,
    open,
    onOpenChange,
    dir: $.dir
  }, children, /* @__PURE__ */ React.createElement(DropdownMenuPrimitive__namespace.Portal, {
    container: portalContainer
  }, /* @__PURE__ */ React.createElement(DropdownMenuPrimitive__namespace.Content, {
    className: classNames.classNames(
      "lb-root lb-portal lb-elevation lb-dropdown",
      className
    ),
    sideOffset: constants.FLOATING_ELEMENT_SIDE_OFFSET,
    collisionPadding: constants.FLOATING_ELEMENT_COLLISION_PADDING,
    ...props
  }, content)));
}
const DropdownItem = React.forwardRef(({ children, className, ...props }, forwardedRef) => {
  return /* @__PURE__ */ React.createElement(DropdownMenuPrimitive__namespace.DropdownMenuItem, {
    className: classNames.classNames("lb-dropdown-item", className),
    ...props,
    ref: forwardedRef
  }, children);
});

Object.defineProperty(exports, 'DropdownTrigger', {
  enumerable: true,
  get: function () { return DropdownMenuPrimitive.DropdownMenuTrigger; }
});
exports.Dropdown = Dropdown;
exports.DropdownItem = DropdownItem;
//# sourceMappingURL=Dropdown.js.map
