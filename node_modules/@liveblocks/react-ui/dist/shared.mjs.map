{"version":3,"file":"shared.mjs","sources":["../src/shared.ts"],"sourcesContent":["import type { OpaqueClient } from \"@liveblocks/core\";\nimport { kInternal, raise, stringify } from \"@liveblocks/core\";\nimport {\n  ClientContext,\n  RoomContext,\n  useClient,\n  useRoom,\n  useSelf,\n} from \"@liveblocks/react\";\nimport React, { useContext } from \"react\";\nimport { useSyncExternalStore } from \"use-sync-external-store/shim/index.js\";\n\nconst MENTION_SUGGESTIONS_DEBOUNCE = 500;\n\nconst _cachesByClient = new WeakMap<OpaqueClient, Map<string, string[]>>();\n\nfunction getMentionSuggestionsCacheForClient(client: OpaqueClient) {\n  let cache = _cachesByClient.get(client);\n  if (!cache) {\n    cache = new Map();\n    _cachesByClient.set(client, cache);\n  }\n  return cache;\n}\n\n/**\n * @private For internal use only. Do not rely on this hook.\n *\n * Simplistic debounced search, we don't need to worry too much about deduping\n * and race conditions as there can only be one search at a time.\n */\nexport function useMentionSuggestions(search?: string) {\n  const client = useClient();\n\n  const room = useRoom();\n  const [mentionSuggestions, setMentionSuggestions] =\n    React.useState<string[]>();\n  const lastInvokedAt = React.useRef<number>();\n\n  React.useEffect(() => {\n    const resolveMentionSuggestions =\n      client[kInternal].resolveMentionSuggestions;\n\n    if (search === undefined || !resolveMentionSuggestions) {\n      return;\n    }\n\n    const resolveMentionSuggestionsArgs = { text: search, roomId: room.id };\n    const mentionSuggestionsCacheKey = stringify(resolveMentionSuggestionsArgs);\n    let debounceTimeout: number | undefined;\n    let isCanceled = false;\n\n    const mentionSuggestionsCache = getMentionSuggestionsCacheForClient(client);\n    const getMentionSuggestions = async () => {\n      try {\n        lastInvokedAt.current = performance.now();\n        const mentionSuggestions = await resolveMentionSuggestions(\n          resolveMentionSuggestionsArgs\n        );\n\n        if (!isCanceled) {\n          setMentionSuggestions(mentionSuggestions);\n          mentionSuggestionsCache.set(\n            mentionSuggestionsCacheKey,\n            mentionSuggestions\n          );\n        }\n      } catch (error) {\n        console.error((error as Error)?.message);\n      }\n    };\n\n    if (mentionSuggestionsCache.has(mentionSuggestionsCacheKey)) {\n      // If there are already cached mention suggestions, use them immediately.\n      setMentionSuggestions(\n        mentionSuggestionsCache.get(mentionSuggestionsCacheKey)\n      );\n    } else if (\n      !lastInvokedAt.current ||\n      Math.abs(performance.now() - lastInvokedAt.current) >\n        MENTION_SUGGESTIONS_DEBOUNCE\n    ) {\n      // If on the debounce's leading edge (either because it's the first invokation or enough\n      // time has passed since the last debounce), get mention suggestions immediately.\n      void getMentionSuggestions();\n    } else {\n      // Otherwise, wait for the debounce delay.\n      debounceTimeout = window.setTimeout(() => {\n        void getMentionSuggestions();\n      }, MENTION_SUGGESTIONS_DEBOUNCE);\n    }\n\n    return () => {\n      isCanceled = true;\n      window.clearTimeout(debounceTimeout);\n    };\n  }, [client, room.id, search]);\n\n  return mentionSuggestions;\n}\n\nfunction useCurrentUserIdFromRoom() {\n  return useSelf((user) => (typeof user.id === \"string\" ? user.id : null));\n}\n\nfunction useCurrentUserIdFromClient_withClient(client: OpaqueClient) {\n  const currentUserIdStore = client[kInternal].currentUserIdStore;\n  return useSyncExternalStore(\n    currentUserIdStore.subscribe,\n    currentUserIdStore.get,\n    currentUserIdStore.get\n  );\n}\n\nexport function useCurrentUserId(): string | null {\n  const client = useContext(ClientContext);\n  const room = useContext(RoomContext);\n\n  // NOTE: These hooks are called conditionally, but in a way that will not\n  // take different code paths between re-renders, so we can ignore the\n  // rules-of-hooks lint warning here.\n  /* eslint-disable react-hooks/rules-of-hooks */\n  if (room !== null) {\n    return useCurrentUserIdFromRoom();\n  } else if (client !== null) {\n    return useCurrentUserIdFromClient_withClient(client);\n  } else {\n    raise(\n      \"LiveblocksProvider or RoomProvider are missing from the React tree.\"\n    );\n  }\n  /* eslint-enable react-hooks/rules-of-hooks */\n}\n"],"names":["React","mentionSuggestions"],"mappings":"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"}